<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <Version>2.3.0</Version>
    <Company>AlexanderOnTest.tech</Company>
    <Authors>Alexander Dunn</Authors>
    <Product>NetCoreWebDriverFactory</Product>
    <Description>A library to ease the creation of Selenium WebDriver instances in .net Core projects.

Usage
Instantiate a WebDriverFactory from a .NET Core project:
IWebDriverFactory webDriverFactory =  new DefaultWebDriverFactory(Path.GetDirectoryName(Assembly.GetCallingAssembly().Location), {{yourGridUri}});

Use the alternative Windows1803WebDriverFactory implementation for Windows 10 version 1803 and earlier.
IWebDriverFactory webDriverFactory =  new Windows1803WebDriverFactory(Path.GetDirectoryName(Assembly.GetCallingAssembly().Location), {{yourGridUri}});

This is not intended for .NET Framework (as it is really not required) but if you would like to use it in a Framework project use:
IWebDriverFactory webDriverFactory =  new FrameworkWebDriverFactory({{yourGridUri}});

Then to use it
IWebDriver localWebDriver = webDriverFactory.GetLocalWebDriver(Browser.xxxx);
or 
IWebDriver remoteWebDriver = webDriverFactory.GetRemoteWebDriver(Browser.xxxx, PlatformType.xxxx);

Supported Browsers:
Chrome
Firefox
Edge (Windows 10)
Internet Explorer 11 (Windows Platforms)
Safari (MacOS)

Platforms:
Windows (PlatformType.Windows)
Linux        (PlatformType.Linux)
MacOS     (PlatformType.Mac)

Tested and working on Windows 10, Linux (Ubuntu 18.04) and MacOS Mojave

The repository at
https://github.com/AlexanderOnTesting/NetCoreWebDriverFactory
contains test projects for Windows, Linux and MacOS. These can be used to test your setup and demonstrate the options available.

The supporting package https://www.nuget.org/packages/Selenium.WebDriver.WebDriverFactoryNunitConfig provides easy test configuration options if using Nunit 3 for your tests.</Description>
    <PackageReleaseNotes>v2.3.0
Addition of a parameterised constructor for WebDriverConfiguration.

Warning: v2.3.x is intended to be the final feature release of v2. 
v3.x.x will require an additonal (optional) parameter on many interface methods to support custom browser sizes. 
This should only be a breaking change if you are implementing the interfaces, extending my classes or using Object initialisation for generating WebDriverConfiguration instances:

If you are only consuming the interfaces, the version change will be safe.

In addition, setters will be removed from the properties of IWebDriverConfiguration (and WebDriverConfiguration)
Using the parameterised Constructor introduced in v.2.3.0 will become required if not using the ConfigurationBuilder introduced in v3.x</PackageReleaseNotes>
    <Copyright>Copyright 2019 Alexander Dunn</Copyright>
    <PackageProjectUrl>https://github.com/AlexanderOnTesting/NetCoreWebDriverFactory</PackageProjectUrl>
    <PackageLicenseExpression>Apache-2.0</PackageLicenseExpression>
    <PackageTags>Selenium, WebDriverFactory, WebDriver, Selenium WebDriver, DotNet Core, .net Core.</PackageTags>
    <PackageId>Selenium.WebDriver.NetCoreWebDriverFactory</PackageId>
    <LangVersion>7.3</LangVersion>
    <AssemblyVersion>2.3.0.0</AssemblyVersion>
    <FileVersion>2.3.0.0</FileVersion>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DefineConstants />
    <DocumentationFile>.\AlexanderOnTest.NetCoreWebDriverFactory.xml</DocumentationFile>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Selenium.WebDriver" Version="3.141.0" />
  </ItemGroup>

</Project>
